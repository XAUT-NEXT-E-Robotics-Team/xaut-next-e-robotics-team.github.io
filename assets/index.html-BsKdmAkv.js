import{_ as n,c as l,d as h,b as t,a as i,w as e,r as k,o as p}from"./app-Cxw_EyMP.js";const r={};function d(g,s){const a=k("VPTable");return p(),l("div",null,[s[1]||(s[1]=h(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>在预学习阶段，实现一个自瞄识别器是极为困难的。</p><p>不过，了解如何实现一个识别器对你的视觉识别算法学习和后续的项目开发（无论是什么项目）都有帮助</p><p>因此，这部分内容将会在后续作为答辩考核内容，请各位务必阅读学习。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于这位菜狗（指笔者）文笔和技术都很垃圾，因此部分内容摘自<a href="https://github.com/NeoZng/vision_tutorial/tree/v1.0.0" target="_blank" rel="noopener noreferrer">视觉圣经</a>，有兴趣的可以直接去看原文（也推荐这么做）</p></div><h2 id="一、-整车跟踪自瞄算法的起源" tabindex="-1"><a class="header-anchor" href="#一、-整车跟踪自瞄算法的起源"><span><mark>一、 整车跟踪自瞄算法的起源</mark></span></a></h2><h3 id="_1-自瞄算法" tabindex="-1"><a class="header-anchor" href="#_1-自瞄算法"><span>1. 自瞄算法</span></a></h3><p>  在RM赛场中，开挂是被允许的。自动瞄准系统（自瞄）利用相机的识别和定位算法以达到指导云台瞄准目标，提高命中率的作用。为此，RM视觉组由此诞生。   传统的自瞄思路非常简单：识别装甲板，确定装甲板位置，计算云台目标位置，开火。在自瞄刚出现的几个赛季内，这种传统算法的效果非常不错。然而好景不长，许多学校为此做出了改进。在当今的RM赛场上，绝大多数学校会选择使用两对装甲板不同高度的机械设计和底盘高速自旋（小陀螺）的运动方式以达到移动装甲板，以防止命中的目的。对于传统自瞄，由于单个目标的局限性，即使建立高阶状态空间方程（一种建模方法，不重要）并使用卡尔曼滤波（一种算法，不重要，认为它很牛逼就行）进行观测，仍较难获得该装甲板的运动状态，特别是当该装甲板即将旋转90度（即将被隐藏不可击打）的时装甲板预测将会飘出车外，严重影响精度。</p><p><img src="https://free.picui.cn/free/2025/09/20/68ce7f10b04eb.png" alt=""> 机器人发生旋转的时候，由于装甲板转到另一侧导致预测失效超出车体；图源华广机器人RMUA技术报告。</p><div class="hint-container note"><p class="hint-container-title">你在TM在说什么，可以讲人话吗？</p><p>试图去理解就行，也可以STFW辅助理解。</p><p>本文大部分内容摘自《2025完整形态技术文档》，是参加对抗赛必须要提交的内容。本文已进行简化处理。</p><p>你们以后也会写类似这样的东西，加油！</p></div><h3 id="_2-主流的自瞄算法" tabindex="-1"><a class="header-anchor" href="#_2-主流的自瞄算法"><span>2. 主流的自瞄算法</span></a></h3><p>  由于以上需求和原因，几乎所有RoboMaster有能力开发自瞄的战队均将自瞄研发的重心从传统单装甲板自瞄转移到研发可反小陀螺的自瞄系统中来。当前存在的反陀螺自瞄方案主要有两种，第一种是基于扩展卡尔曼滤波的整车观测器，即通过观测敌车装甲板以达到观测敌车陀螺半径，平面移动的3ODF自由度位姿数据和速度数据即装甲板高度等状态信息，并通过状态转移函数进行预测。第二种思路是不进行整车建模，只通过装甲板的出现与隐藏大致判断云台应预先摆放的位置，并当预期装甲板出现时，进行跟踪预测。相比于后者，经过我们和其他学校的实验验证，整车建模方案有效性和鲁棒性均较高。</p><p>  现有主流自瞄开源有上海交通大学云台交龙战队再2023年青年工程师大会上开源的自瞄“方瞄” 和华南师范大学PIONEER战队chenjunnn在2022年开源自瞄系统“君瞄” 。由于自瞄系统开发的难度较大，需要较好的数理知识，逻辑能力，编程能力。鉴于我对2024赛季视觉组人数较少，能力和经验均不足，我队2024赛季选择基于华南师范大学PIONEER战队chenjunnn开源进行二次开发，增加了选板和串口等重要模块，以达到上场使用的目的。但由于”君瞄“自身缺陷和对开源算法的理解薄弱，2024赛季最优静止旋转靶自瞄命中率仅仅达到75%，而平均命中率不及60%，场上命中率低于50%，并不理想。鉴于上赛季的问题，2025赛季视觉组对自瞄系统的相关代码资料进行调查研究，从原理方面推导各类公式，对逻辑进行修正，采用了一套不同于开源自喵的方案，从0开始编写整套自瞄跟踪器代码，从而实现了代码的自有化。经过先前的测试，在控制方面优秀的前提下，静止小陀螺自瞄最高命中率达到了96，平均命中率也超过60%，超越24赛季。</p><h3 id="_3-next-e-的自瞄算法流程" tabindex="-1"><a class="header-anchor" href="#_3-next-e-的自瞄算法流程"><span>3. NEXT E 的自瞄算法流程</span></a></h3><p><img src="https://free.picui.cn/free/2025/09/20/68ce79d76ccec.png" alt="自瞄算法流程"></p><ol><li>图像读取模块：使用海康相机SDK进行图像读取</li><li>装甲板识别模块：使用传统方案进行装甲板识别，并使用LeNet5进行数字识别</li><li>PNP解算定位模块：使用PNP算法对装甲板位姿进行解算，并根据云台当前位姿将装甲板位姿转换到陀螺仪坐标系。</li><li>扩展卡尔曼观测器模块：使用EKF对所得到的装甲板进行观测，以得到敌方机器人的底盘运动3ODF位姿与速度，装甲板高度和装甲板据机器人中心距离。</li><li>整车模型预测模块：使用设计好一阶整车状态空间方程，并利用算法延迟和弹丸飞行时间对敌车运动情况进行预测。</li><li>目标选择模块：利用装甲板类型，目标距离操作手准心的最近yaw等作为依据进行目标选择。</li><li>水平方向空气阻力模型弹道补偿模块：为了补偿由重力和空气阻力造成的弹道下坠，建立的仅水平方向空气阻力模型进行弹道补偿。</li><li>火控模块：基于电控当前值是否近似等于目标值为依据进行火控。</li></ol><h2 id="二、传统装甲板识别步骤" tabindex="-1"><a class="header-anchor" href="#二、传统装甲板识别步骤"><span><mark>二、传统装甲板识别步骤</mark></span></a></h2><p>识别器大致工作流程如下：</p><p><img src="https://free.picui.cn/free/2025/09/20/68ce798790339.png" alt="传统装甲板识别流程"></p><div class="hint-container tip"><p class="hint-container-title">没听过的算法名称？</p><p>请自行 STFW 或 RTFM</p></div><p>在识别器中，二值化部分、颜色判断部分、形态判断部分和数字提取部分属于传统视觉的范畴。</p><h3 id="_1-预处理部分" tabindex="-1"><a class="header-anchor" href="#_1-预处理部分"><span>1. 预处理部分</span></a></h3><p>  首先，我们选用合适的阈值对照片进行二值化，考虑到RM赛场对光线（光泽度）和颜色管理严格，因此，目标机器人上的杂光较少。实验证明，在 0 - 1500 lux的广泛照度下，在阈值合适的情况下，仅需选择合适的曝光均能够通过二值化稳定对灯条进行分离。</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Mat</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Detector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">preprocessImage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Mat</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> rgb_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//传入rgb类型图片</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Mat gray_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cvtColor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">rgb_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> gray_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">COLOR_RGB2GRAY</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//灰度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Mat binary_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">threshold</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">gray_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> binary_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> binary_thres</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 255</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">THRESH_BINARY</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//二值化</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> binary_img</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（1）转成灰度图片<em><strong>cvtColor();</strong></em></p><p>（2）进行二值化处理处理成黑白图片<em><strong>threshold();</strong></em></p><h3 id="_2-颜色识别和查找灯条部分" tabindex="-1"><a class="header-anchor" href="#_2-颜色识别和查找灯条部分"><span>2. 颜色识别和查找灯条部分</span></a></h3><p>  接下来是颜色识别，通过相机照片可以看到，一块正常亮度的装甲板，灯条中心较量的部分呈现的颜色往往趋近于白色。因此仅通过提取颜色（蓝色或红色）通道进行阈值化识别将会获得一个中空的灯条，并不适合用来进行颜色判断。因此我们采用直接框选上一步识别的二值化灯条部分为ROI并逐个统计其中颜色像素和红色像素的值，进行比对，判断该灯条为蓝色或是红色，如果灯条不是预期敌方颜色，则不进行识别。</p><p>  颜色识别后将进行灯条的形态判断，通过利用灯条的长宽比例判断是否是灯条还是别的东西，并利用最小矩形拟合结合判断得到灯条的最高点和最低点，进入下一步。</p><p><img src="https://free.picui.cn/free/2025/09/20/68ce8293e544e.png" alt=""></p><p>（1）使用 <em><strong>cv::findContours()</strong></em> 查找轮廓</p><p>（2）对每个轮廓计算最小外接矩形 <em><strong>cv::minAreaRect()</strong></em></p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">RotatedRect</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> cv</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">minAreaRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">InputArray</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> contours</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 参数：contour 是点的集合，如轮廓</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 返回值：RotatedRect类型，即带角度的旋转矩形框,其值形如(center(x,y), (width, height), angle)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>随后通过调用返回值对象的 points 方法来获取这个矩形的四个顶点</li><li>对四个顶点的 y 坐标进行排序 std::sort() ,并且得到顶部和底部坐标，长度，宽度和角度（弧度制）</li></ul><p>（3）进一步用上面得到的数据来筛选是否为装甲板上的灯条，筛选参数</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">bool</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Detector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">isLight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Light</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    float</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ratio </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> /</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">length</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">           // 宽高比</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ratio_ok </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> l</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">min_ratio</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ratio </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&amp;&amp;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ratio </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> l</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">max_ratio</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> angle_ok </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">tilt_angle</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> l</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">max_angle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     // 倾斜角度</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ratio_ok </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&amp;&amp;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> angle_ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）根据RGB通道值判断灯条颜色（红/蓝）</p><h3 id="_3-灯条匹配" tabindex="-1"><a class="header-anchor" href="#_3-灯条匹配"><span>3. 灯条匹配</span></a></h3><p>  接下来，利用穷举的方法对灯条进行匹配，排除明显不符合要求的匹配结果（如两个灯条中间还有一个灯条的情况）并得到装甲板灯条的四个顶点位置。通过按照特定比例扩展灯条长度即可得到数字所在的范围，将数字提取并通过仿射变换和均值化，得到一张装甲板数字图片进行接下来的数字识别。</p><p>（1）双循环匹配所有灯条对</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">auto</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_1 </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> lights</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">begin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_1 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> lights</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">auto</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_2 </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_1 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_2 </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> lights</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 匹配逻辑</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）检查颜色是否符合要求，用之前采集的灯条红蓝信息</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">light_1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> detect_color </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">||</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light_2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> !=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> detect_color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> continue</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>（3）排除包含其他灯条的配对</p><p>（4）根据几何特征（装甲板匹配条件）判断是否为有效装甲板</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-c++"><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">ArmorType</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Detector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">isArmor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Light</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light_1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Light</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> light_2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    float</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_length_ratio </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                    // 灯条长度比</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    float</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> center_distance </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                       // 中心距离</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    float</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> angle </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                                 // 连接线角度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 验证条件</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_ratio_ok </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_length_ratio </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">min_light_ratio</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> center_distance_ok </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> angle_ok </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> angle </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">max_angle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> light_ratio_ok </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&amp;&amp;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> center_distance_ok </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&amp;&amp;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> angle_ok</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-数字识别" tabindex="-1"><a class="header-anchor" href="#_4-数字识别"><span>4. 数字识别</span></a></h3><p>  为唯一确定装甲板，使用几何条件是不够的。然而在RM装甲板上有一个唯一的条件可以被我们使用，就是我们的装甲板数字。因此，我们可以利用各类算法开始可以识别装甲板数字的程序。我们选用的是LeNet5算法。由于数字识别部分牵扯到机器学习和一些比较深入的传统cv内容比如仿射变换等，因此关于数字识别的算法细节和实现方式此处暂不引出，进入正式学习时将有学长学习详细培训。</p><h2 id="三、-各种识别算法的比" tabindex="-1"><a class="header-anchor" href="#三、-各种识别算法的比"><span><mark>三、 各种识别算法的比</mark></span></a></h2><p>  当今的视觉识别一般分为两类，机器学习和传统视觉，以及二者相融合的方法</p>`,47)),t(a,{copy:"all",align:"center",markdown:"eJx1lM1u2kAUhfd5Cr9Al32JSt30HbqoVBWp7aYSC4dfEzAmgSRACMFNAJc0NvkrtrHhZebOjFd5hd7xxYAUBSEzY3vOfPfcM+Q17nXkqpjYgbhwtbwmvSfebeKARSOxvJLTipzWcMoHIfQcuJuwYKReG5rQMoR7zh9PtfxB/p36vHk9yGsQdkTHkY0iXDzhevyKWeklMsCayWKc6AV8ysImojA/BPOU+brol2AxhsrzS6QIwI2zK+olD4f8+oTrUwWjt3jbpDGuk8ZflIGFi/K82wbrHMo1Ea4hvoe2SWK716IwpTiDyiPuTxUleo3X/8BJg5/OuekmFxX55CRVK1trwjhGo/YXynkRrAIvllPeBvOPkl4LrKPktsv8Oo1Z3EwVFL5+BeGEjID1rTK4/BuvaATz71CYAHErFvVZvEZ3kssh+D7cmPyygNaI+FgsB5meXDgQPII130iOU69SCz59JBcRg0TJchL98Pnnj9w3bpxJvfzlPf6y5RjZYW6JzrMsHSt3111pN7CmnUmbrY39FGyBqZdvcIqHlbBdahUmDyYFFt6IQsC7HrQm9HTHvzKohIx7s/+2KwgldfS6I8ZDsbRoK8wPnxREs8odG4Z1fAdl0WzVNsvjzekmTuM47Z+HFUM5SuwVC1GtzKIuHK0zXpUfdyiac0LGRVDpvURXW4H9Y0JG4H3Rwuk17swHNQjbr2MjBnUWj2R1JkYd9BerV5b5Pl6Jmrz5lfuaw8XY0qwJClidl4EuJ4coAV4gXB3PC9Wu/N7sveVXmhk8pnQf/hWw4kz6K/WoEDE/oDsbWnclXZvS5pXYcqGyUbSlo7PgXnp3StWawcARtQDcPoWOwqC4F5irPpWIqtRRKkPa2IAaZk+FgPrhDvn5PzpS6l9gEPKepxJTPWFhyHxVk5b7rsHNlMWYuXSONGiJb3KjhXFQ0UinYBkkhAMqSsv/BywOMl0="},{default:e(()=>[...s[0]||(s[0]=[i("table",null,[i("thead",null,[i("tr",null,[i("th",null,"比较项目"),i("th",null,"说明"),i("th",null,"传统视觉"),i("th",null,"机器学习"),i("th",null,"融合算法")])]),i("tbody",null,[i("tr",null,[i("td",null,"应用范围"),i("td"),i("td",null,"窄（只能适用于较为单一的工况）"),i("td",null,"宽"),i("td",null,"宽")]),i("tr",null,[i("td",null,"鲁棒性"),i("td",null,"耐操性"),i("td",null,"一般较差（易受光线影响）"),i("td",null,"一般较强（取决于算法选择和数据集质量）"),i("td",null,"不好说（取决于调参情况，上限及高下限及低）")]),i("tr",null,[i("td",null,"速度"),i("td"),i("td",null,"快"),i("td",null,"慢"),i("td",null,"适中（一般不会使用非常复杂的网络）")]),i("tr",null,[i("td",null,"跨平台"),i("td"),i("td",null,"好"),i("td",null,"差（RM工况下一般只能使用Jetson或者i5或以上小电脑"),i("td",null,"还行，取决于网络（融合算法一般不适用复杂的网络）")]),i("tr",null,[i("td",null,"精确性"),i("td",null,"比如交点是否精确"),i("td",null,"好"),i("td",null,"很差（一般取决于数据集，而且神经网络为概率模型，精度不可控）"),i("td",null,"好（可以兼顾二者优势）")]),i("tr",null,[i("td",null,"易实现性"),i("td",null,"好写？"),i("td",null,"好（传统视觉算法好理解，有库）"),i("td",null,"不好说（看你自研还是用常用模型比如yolo）"),i("td",null,"还行（可能需要你对简单网络的理解）")]),i("tr",null,[i("td",null,"易用性"),i("td",null,"好调？"),i("td",null,"好（算法好理解）"),i("td",null,"难（炼丹）"),i("td",null,"看你设计")]),i("tr",null,[i("td",null,"评价"),i("td",null,"胡言乱语"),i("td",null,"只在特定工况适用（工业常用）一般需要补光或是可以实时调参的场景"),i("td",null,"懒人专用 or 大佬专用"),i("td",null,"要不成神，要不又调参又炼丹")])])],-1)])]),_:1}),s[2]||(s[2]=i("p",null,"自瞄算法选用融合算法的策略。",-1)),s[3]||(s[3]=i("div",{class:"hint-container tip"},[i("p",{class:"hint-container-title"},"小巧思（作业）"),i("p",null,"你想识别什么呢，构思一个你自己的识别器。")],-1))])}const y=n(r,[["render",d]]),A=JSON.parse('{"path":"/docs/algorithm_group_tuition/6kvu9mai/","title":"传统装甲板识别步骤（可拓展到任何识别项目）","lang":"zh-CN","frontmatter":{"title":"传统装甲板识别步骤（可拓展到任何识别项目）","createTime":"2025/09/20 17:50:19","permalink":"/docs/algorithm_group_tuition/6kvu9mai/","description":"提示 在预学习阶段，实现一个自瞄识别器是极为困难的。 不过，了解如何实现一个识别器对你的视觉识别算法学习和后续的项目开发（无论是什么项目）都有帮助 因此，这部分内容将会在后续作为答辩考核内容，请各位务必阅读学习。 提示 由于这位菜狗（指笔者）文笔和技术都很垃圾，因此部分内容摘自视觉圣经，有兴趣的可以直接去看原文（也推荐这么做） 一、 整车跟踪自瞄算法的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"传统装甲板识别步骤（可拓展到任何识别项目）\\",\\"image\\":[\\"https://free.picui.cn/free/2025/09/20/68ce7f10b04eb.png\\",\\"https://free.picui.cn/free/2025/09/20/68ce79d76ccec.png\\",\\"https://free.picui.cn/free/2025/09/20/68ce798790339.png\\",\\"https://free.picui.cn/free/2025/09/20/68ce8293e544e.png\\"],\\"dateModified\\":\\"2025-09-20T11:27:22.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://xaut-next-e-robotics-team.github.io/docs/algorithm_group_tuition/6kvu9mai/"}],["meta",{"property":"og:site_name","content":"NEXT-E"}],["meta",{"property":"og:title","content":"传统装甲板识别步骤（可拓展到任何识别项目）"}],["meta",{"property":"og:description","content":"提示 在预学习阶段，实现一个自瞄识别器是极为困难的。 不过，了解如何实现一个识别器对你的视觉识别算法学习和后续的项目开发（无论是什么项目）都有帮助 因此，这部分内容将会在后续作为答辩考核内容，请各位务必阅读学习。 提示 由于这位菜狗（指笔者）文笔和技术都很垃圾，因此部分内容摘自视觉圣经，有兴趣的可以直接去看原文（也推荐这么做） 一、 整车跟踪自瞄算法的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://free.picui.cn/free/2025/09/20/68ce7f10b04eb.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-20T11:27:22.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-20T11:27:22.000Z"}]]},"readingTime":{"minutes":10.91,"words":3273},"git":{"createdTime":1758367361000,"updatedTime":1758367642000,"contributors":[{"name":"ZiYu","username":"ZiYu","email":"ziyedeyuu@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/ZiYu?v=4","url":"https://github.com/ZiYu"}]},"autoDesc":true,"filePathRelative":"notes/algorithm_group_tuition/2. 预学习部分/8.传统装甲板识别步骤（可拓展到任何识别项目）.md","headers":[]}');export{y as comp,A as data};
