import{_ as a,c as t,d as i,o as n}from"./app-Cxw_EyMP.js";const o={};function r(s,e){return n(),t("div",null,[...e[0]||(e[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>本文不会涉及到太多技术知识，只是让大家对视觉/算法组有一个基本的认识d=====(￣▽￣*)b</strong></p><ol><li>本文没有作业和任务</li><li>本文仅进行介绍，相关软件不要求现在就安装</li><li>放轻松！</li></ol></div><h2 id="_1-算法组基本概念" tabindex="-1"><a class="header-anchor" href="#_1-算法组基本概念"><span>1.算法组基本概念</span></a></h2><ul><li>算法组（原称视觉组）负责机器人的传感器和数据处理，通过对相机、激光雷达等传感器采集到的信息进行处理，让机器人具备“视觉”和“知觉”功能。比如，设计自瞄算法让机器人自动识别敌方装甲板，实现精准打击；设计能量机关瞄准算法，使机器人能有效击打大小符能量机关；打造感知系统，为哨兵机器人、自动步兵等提供“大脑”功能；全权负责雷达兵种，利用目标检测算法和三维重建，定位敌方机器人位置，为我方制作实时“小地图”，并通过多机通信增强自动机器人的感知和决策能力。</li></ul><p>‍</p><h2 id="_2-关于各兵种的算法" tabindex="-1"><a class="header-anchor" href="#_2-关于各兵种的算法"><span>2.关于各兵种的算法</span></a></h2><ul><li><p>今年一共有七个兵种：<strong>步兵，英雄，工程，哨兵，无人机，飞镖，雷达站</strong>。目前用到视觉的有步兵，英雄（只在联盟赛），哨兵，无人机 ，雷达站(其实都可以用到视觉，只是我们能力还是不太够将所有功能开发出来，就比如工程机器人的自动对矿等等)。他们用到视觉的部分：</p><ol><li>自瞄算法，步兵，哨兵，无人机，英雄通过自瞄算法，识别敌方装甲板，辅助操作手准确击打敌方。</li><li>打符算法，击打<strong>大小符能量机关。</strong></li><li>雷达站相关算法。</li><li>步兵导航</li><li>哨兵自动路径规划，定位与建图</li><li>. . . . . . . . . . .</li></ol></li></ul><p>‍</p><ul><li><p>自瞄算法是最基础，也是运用最广的算法，自瞄就相当于你打游戏的时候开了个自动锁头的外挂，有了自瞄我们就能对敌方机器人或者基地/前哨站进行更精确的打击。</p></li><li><p>打符算法也是很重要的算法（虽然我们目前还没有做出来，希望不会太远），能量机关不管是大能量机关还是小能力机关对团队都有很强的增益。<strong>小符为匀速旋转，大符为变速进行旋转。</strong></p></li><li><p>导航算法，不管是步兵还是自动哨兵都会用到的核心技术。用于实现 <strong>定位、路径规划、避障和运动控制</strong>。在比赛中，导航算法可以影响机器人的自主决策能力和战场表现。</p></li><li><p>自动兑矿，这是和工程相关的算法，目前还没有写过，<s>只有碳基兑矿就是了</s></p></li></ul><h2 id="_3-关于和算法组相关的硬件" tabindex="-1"><a class="header-anchor" href="#_3-关于和算法组相关的硬件"><span>3.关于和算法组相关的硬件</span></a></h2><h3 id="_3-1相机" tabindex="-1"><a class="header-anchor" href="#_3-1相机"><span>3.1相机</span></a></h3><ul><li><p>相机是机器人的眼睛。和人眼的成像原理一样，相机通过镜头汇聚光束使他们聚集在一块半导体感光元件上（相当于视网膜）从而产生可供读取的数据。在<strong>RoboMaster</strong> 中，视觉组的相机是机器人感知环境的核心传感器，直接影响目标识别、定位和自动瞄准的精度。我们常用的是海康的工业相机。</p><p>MVS是官方开发的相机控制与图像采集软件，支持其全系列工业相机，提供 <strong>设备管理、参数配置、图像采集、算法测试</strong> 等功能，是RoboMaster视觉组常用的相机调试工具之一，我们在之后的相机标定也会经常用到。</p><p>下载链接附上（这也许是你以后最常用到的软件之一）：</p><p>MVS下载链接：<a href="https://www.hikrobotics.com/cn/machinevision/service/download/?module=0" target="_blank" rel="noopener noreferrer">海康机器人-机器视觉-下载中心</a></p></li></ul><p>‍</p><h3 id="_3-2工控机" tabindex="-1"><a class="header-anchor" href="#_3-2工控机"><span>3.2工控机</span></a></h3><ul><li><p><strong>工控机</strong>是一种专为工业环境设计的计算机，在 <strong>RoboMaster 比赛</strong> 中，工控机是视觉组核心计算平台。</p></li><li><p>工控机<strong>其实就是每台机器人的“大脑”，指导机器人动起来和怎么动</strong>。我们的代码最终就是通过小电脑来指导机器人实现各种功能。</p></li><li><p>小电脑的特点就是<strong>体积小，</strong> 可以放在机器人上</p></li><li><p>到了后期调车的时候，一般就是拿着<strong>显示屏🖥，鼠标🖱，键盘⌨</strong> 这三件套连接机器人上的小电脑，<s>然后坐在地上调车</s> ，但是我们有ziyu的wifi，我们能用nomachine</p><p>（之前让你们下载的），可以通过工控机的无线ip链接工控机 <em>★,°</em> :.☆(￣▽￣)/$: <em>.°★</em> 。</p></li></ul><h2 id="_4-关于和算法组相关的软件-系统" tabindex="-1"><a class="header-anchor" href="#_4-关于和算法组相关的软件-系统"><span>4.关于和算法组相关的软件/系统</span></a></h2><h3 id="_4-1-ubuntu" tabindex="-1"><a class="header-anchor" href="#_4-1-ubuntu"><span>4.1 <strong>ubuntu</strong></span></a></h3><ul><li><p>操作系统，英文名称Operating System，简称OS，是计算机系统中必不可少的基础系统软件，它是应用程序运行以及用户操作必备的基础环境支撑，是计算机系统的核心。<br> 操作系统的作用是管理和控制计算机系统中的硬件和软件资源，例如，它负责直接管理计算机系统的各种硬件资源，如对CPU、内存、磁盘等的管理，同时对系统资源所需的优先次序进行管理。操作系统还可以控制设备的输入、输出以及操作网络与管理文件系统等事务。同时，它也负责对计算机系统中各类软件资源的管理。例如各类应用软件的安装、设置运行环境等。</p></li><li><p>ubuntu是linux系统的<strong>一种发行版</strong>。</p><p>Linux 是一个开源的操作系统内核，而 Ubuntu 基于 Linux 内核开发，属于 Linux 发行版之一。它以易用性、稳定性和广泛的软件支持著称，常用于个人电脑、服务器等场景，也是 Linux 桌面环境中较为流行的选择之一。我们的工控机中使用的就是这个系统，所以我们要熟练掌握。</p></li><li><p>代码是在Linux系统下面跑的，而且你没接触过Linux，那么前期可以学习一下<strong>Linux命令行的基本操作</strong>。这里是视觉组基本介绍，我就不过多说明了，详细内容请往下看。</p></li></ul><h3 id="_4-2-nomachine​" tabindex="-1"><a class="header-anchor" href="#_4-2-nomachine​"><span>4.2 nomachine​</span></a></h3><p>NoMachine 是一款功能强大的远程桌面工具，适用于Linux、windows、<a href="https://so.csdn.net/so/search?q=ARM&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">ARM</a>、Android等几乎全系统。前面说过，我们通常连接工控机使用的就是这个软件，非常非常非常的好用😎😎😎</p><p>下载链接：</p><p><a href="https://downloads.nomachine.com/" target="_blank" rel="noopener noreferrer">Download Free Remote Desktop Access - NoMachine</a></p><p>‍</p><h3 id="_4-3-mvs" tabindex="-1"><a class="header-anchor" href="#_4-3-mvs"><span>4.3 MVS</span></a></h3><p>前面已经说过了，这里就不多介绍了</p><h3 id="_4-4-ide" tabindex="-1"><a class="header-anchor" href="#_4-4-ide"><span>4.4 IDE</span></a></h3><h4 id="_4-4-1-visual-studio-code-vs-code" tabindex="-1"><a class="header-anchor" href="#_4-4-1-visual-studio-code-vs-code"><span>4.4.<strong>1. Visual Studio Code (VS Code)</strong></span></a></h4><p>VSCode（全称：Visual Studio Code）是一款由微软开发且跨平台的免费源代码编辑器。该软件支持语法高亮、代码自动补全（又称 IntelliSense）、代码重构、查看定义功能，并且内置了命令行工具和 Git 版本控制系统。用户可以更改主题和键盘快捷方式实现个性化设置，也可以通过内置的扩展程序商店安装扩展以拓展软件功能。</p><p>特点：</p><ul><li>轻量，快速，占用资源少</li><li>强大的插件生态</li><li>跨平台开发</li></ul><p>下载方式：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code - Code Editing. Redefined</a></p><hr><h4 id="_4-4-2-clion" tabindex="-1"><a class="header-anchor" href="#_4-4-2-clion"><span>4.4.<strong>2. CLion</strong></span></a></h4><p>CLion 是一款专为 C 和 C++ 开发设计的集成开发环境（IDE），由捷克软件公司 JetBrains 开发。它结合了智能代码分析、强大的导航功能和直观的用户界面，旨在提高开发效率，适用于从小型项目到大型企业级应用的各种开发场景。</p><p>特点：</p><ul><li><p><strong>智能代码分析与补全</strong></p></li><li><p><strong>跨平台开发能力</strong></p></li><li><p><strong>强大的调试与测试支持</strong></p></li></ul><p>下载方式：<a href="https://www.jetbrains.com/clion/" target="_blank" rel="noopener noreferrer">CLion: A Cross-Platform IDE for C and C++ by JetBrains</a></p><p>ps: 不是免费的，但可以通过教育认证免费用φ(゜▽゜*)♪</p><p>‍</p><ul><li>还有其它IDE，像是<strong>Xcode，Visual Studio，PyCharm等</strong>，大家根据自己习惯和需要选择就行了，这里也是只列了两种常用IDE，VScode更轻量一些，如果大家暂时没有适合的IDE，可以尝试一下(￣▽￣)&quot; ‍</li></ul><h3 id="_4-5-ros" tabindex="-1"><a class="header-anchor" href="#_4-5-ros"><span>4.5 ROS</span></a></h3><ul><li><p>ROS是所谓的机器人操作系统。但实际上他并不是运行在硬件上的内核或操作系统，而是开发机器人所用的一套丰富完整的中间件，可以看作是完整的机器人框架和开发抽象层。</p></li><li><p>使用ROS可以免去许多线程间信息交互、传感器和执行器配置的烦恼，ROS已经提供了开箱即用的库，以及大量方便调试与可视化的工具如RViz和rqt等，还有精心设计的日志系统和配套的仿真环境gazebo。</p></li><li><p>学习ROS你只需要学习ROS的几个基本编程理念，如节点、服务、发布订阅的概念，以及ros的包管理和构建工具，之后就可以愉快的使用ROS了。‍</p></li></ul><h3 id="_4-6-matlab" tabindex="-1"><a class="header-anchor" href="#_4-6-matlab"><span>4.6 Matlab</span></a></h3><p>MATLAB（Matrix Laboratory）是一款由美国 MathWorks 公司开发的高级技术计算语言和交互式环境，主要用于算法开发、数据分析、可视化以及数值计算。它将矩阵运算、高级绘图、数据分析和机器学习等功能集成于一体，广泛应用于工程、科学研究、金融和教育等领域。</p><ul><li>我们使用matlab主要在相机标定方面</li></ul><h2 id="_5-最后" tabindex="-1"><a class="header-anchor" href="#_5-最后"><span>5.最后</span></a></h2><p><strong>亲爱的伙伴，欢迎加入算法（视觉）领域的探索之旅！</strong></p><p>这篇文档只是简单的介绍了一些视觉/算法组。这篇介绍只是引你踏入大门的第一步，而门后的广阔天地，正等待着你探索，希望你能早日找到自己在视觉组学习的方向，早点加入算法组大家庭，早日成为算法（视觉）一方大佬o( <em>￣▽￣</em> )o</p><p>‍</p>',48)])])}const l=a(o,[["render",r]]),h=JSON.parse('{"path":"/docs/algorithm_group_tuition/9inviuxt/","title":"欢迎来到算法组","lang":"zh-CN","frontmatter":{"title":"欢迎来到算法组","createTime":"2025/06/30 15:33:36","permalink":"/docs/algorithm_group_tuition/9inviuxt/","description":"提示 本文不会涉及到太多技术知识，只是让大家对视觉/算法组有一个基本的认识d=====(￣▽￣*)b 本文没有作业和任务 本文仅进行介绍，相关软件不要求现在就安装 放轻松！ 1.算法组基本概念 算法组（原称视觉组）负责机器人的传感器和数据处理，通过对相机、激光雷达等传感器采集到的信息进行处理，让机器人具备“视觉”和“知觉”功能。比如，设计自瞄算法让机器...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"欢迎来到算法组\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-27T06:18:56.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://xaut-next-e-robotics-team.github.io/docs/algorithm_group_tuition/9inviuxt/"}],["meta",{"property":"og:site_name","content":"NEXT-E"}],["meta",{"property":"og:title","content":"欢迎来到算法组"}],["meta",{"property":"og:description","content":"提示 本文不会涉及到太多技术知识，只是让大家对视觉/算法组有一个基本的认识d=====(￣▽￣*)b 本文没有作业和任务 本文仅进行介绍，相关软件不要求现在就安装 放轻松！ 1.算法组基本概念 算法组（原称视觉组）负责机器人的传感器和数据处理，通过对相机、激光雷达等传感器采集到的信息进行处理，让机器人具备“视觉”和“知觉”功能。比如，设计自瞄算法让机器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-27T06:18:56.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-27T06:18:56.000Z"}]]},"readingTime":{"minutes":8.57,"words":2571},"git":{"createdTime":1749833553000,"updatedTime":1756275536000,"contributors":[{"name":"ZiYu","username":"ZiYu","email":"ziyedeyuu@163.com","commits":5,"avatar":"https://avatars.githubusercontent.com/ZiYu?v=4","url":"https://github.com/ZiYu"}]},"autoDesc":true,"filePathRelative":"notes/algorithm_group_tuition/1.欢迎来到算法组.md","headers":[]}');export{l as comp,h as data};
